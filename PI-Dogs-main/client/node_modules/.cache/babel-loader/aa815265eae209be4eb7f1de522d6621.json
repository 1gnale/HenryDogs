{"ast":null,"code":"import { GET_DOGS, GET_TEMPERAMENT, GET_DETAILS, GET_NAME_DOG, FILTER_BY_TEMPERAMENTS, FILTER_BY_WEIGHT, FILTER_BY_NAME } from \"../action/actions\";\nconst INITIAL_STATE = {\n  dogs: [],\n  temperaments: [],\n  detail: [],\n  filterDogs: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_DOGS:\n      return {\n        ...state,\n        dogs: payload,\n        filterDogs: payload\n      };\n    case GET_NAME_DOG:\n      return {\n        ...state,\n        dogs: payload\n      };\n    case GET_DETAILS:\n      return {\n        ...state,\n        detail: payload\n      };\n    case GET_TEMPERAMENT:\n      return {\n        ...state,\n        temperaments: payload\n      };\n    case FILTER_BY_TEMPERAMENTS:\n      const allDogs = state.filterDogs;\n      const filterDogs = payload === \"all\" ? allDogs : allDogs.filter(dog => {\n        var _dog$temperament;\n        return (_dog$temperament = dog.temperament) === null || _dog$temperament === void 0 ? void 0 : _dog$temperament.includes(payload);\n      });\n      return {\n        ...state,\n        dogs: filterDogs\n      };\n    case FILTER_BY_WEIGHT:\n      const filterByWeight = payload === \"desc\" ? state.dogs.sort((a, b) => {\n        return b.weight[0] + b.weight[1] - (a.weight[0] + a.weight[1]);\n      }) : state.dogs.sort((a, b) => {\n        return a.maxWeight - b.maxWeight;\n      });\n      return {\n        ...state,\n        dogs: filterByWeight\n      };\n    case FILTER_BY_NAME:\n      const filterByName = payload === \"az\" ? state.dogs.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        return 0;\n      }) : state.dogs.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        dogs: filterByName\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_DOGS","GET_TEMPERAMENT","GET_DETAILS","GET_NAME_DOG","FILTER_BY_TEMPERAMENTS","FILTER_BY_WEIGHT","FILTER_BY_NAME","INITIAL_STATE","dogs","temperaments","detail","filterDogs","rootReducer","state","type","payload","allDogs","filter","dog","temperament","includes","filterByWeight","sort","a","b","weight","maxWeight","filterByName","name","toLowerCase"],"sources":["C:/Users/Ignacio/Desktop/HenryDogs/PI-Dogs-main/client/src/redux/reducer/index.js"],"sourcesContent":["import {\r\n    GET_DOGS,\r\n    GET_TEMPERAMENT,\r\n    GET_DETAILS,\r\n    GET_NAME_DOG,\r\n    FILTER_BY_TEMPERAMENTS,\r\n    FILTER_BY_WEIGHT,\r\n    FILTER_BY_NAME,\r\n  } from \"../action/actions\";\r\n  \r\n  const INITIAL_STATE = {\r\n    dogs: [],\r\n    temperaments: [],\r\n    detail: [],\r\n    filterDogs: [],\r\n  };\r\n  \r\n  export default function rootReducer(state = INITIAL_STATE, { type, payload }) {\r\n    switch (type) {\r\n      case GET_DOGS:\r\n        return {\r\n          ...state,\r\n          dogs: payload,\r\n          filterDogs: payload,\r\n        };\r\n      case GET_NAME_DOG:\r\n        return {\r\n          ...state,\r\n          dogs: payload,\r\n        };\r\n      case GET_DETAILS:\r\n        return {\r\n          ...state,\r\n          detail: payload,\r\n        };\r\n      case GET_TEMPERAMENT:\r\n        return {\r\n          ...state,\r\n          temperaments: payload,\r\n        };\r\n      case FILTER_BY_TEMPERAMENTS:\r\n        const allDogs = state.filterDogs;\r\n        const filterDogs =\r\n          payload === \"all\"\r\n            ? allDogs\r\n            : allDogs.filter((dog) => dog.temperament?.includes(payload));\r\n        return {\r\n          ...state,\r\n          dogs: filterDogs,\r\n        };\r\n      case FILTER_BY_WEIGHT:\r\n        const filterByWeight =\r\n          payload === \"desc\"\r\n            ? state.dogs.sort((a, b) => {\r\n                return (b.weight[0]+b.weight[1]) - (a.weight[0]+a.weight[1]);\r\n              })\r\n            : state.dogs.sort((a, b) => {\r\n                return a.maxWeight - b.maxWeight;\r\n              });\r\n        return {\r\n          ...state,\r\n          dogs: filterByWeight,\r\n        };\r\n      case FILTER_BY_NAME:\r\n        const filterByName =\r\n          payload === \"az\"\r\n            ? state.dogs.sort((a, b) => {\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n                return 0;\r\n              })\r\n            : state.dogs.sort((a, b) => {\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n                return 0;\r\n              });\r\n        return {\r\n          ...state,\r\n          dogs: filterByName,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}